@model WebApplication4.Models.UserManger

@{
    ViewBag.Title = "DiseaseEdit";
}

<h2>DiseaseEdit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>UserManger</h4>
    <hr />

    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Name)
    @Html.HiddenFor(model => model.Password)
    @Html.HiddenFor(model => model.Phone)
    @Html.HiddenFor(model => model.Identinum)
    @Html.HiddenFor(model => model.Telephone)
    @Html.HiddenFor(model => model.Sex)
    @Html.HiddenFor(model => model.Birth)
    @Html.HiddenFor(model => model.Address)
    @Html.HiddenFor(model => model.Height)
    @Html.HiddenFor(model => model.Weight)
    @Html.HiddenFor(model => model.Profession)
    @Html.HiddenFor(model => model.Introduction)
    @Html.HiddenFor(model => model.Pnickname)
    @Html.HiddenFor(model => model.Kind)
    @Html.HiddenFor(model => model.Isnew)
    @Html.HiddenFor(model => model.Image)
    @Html.HiddenFor(model => model.dt)
    @Html.HiddenFor(model => model.Previouseradication)
    @{
        int diseaseId = Convert.ToInt32(Model.Disease.Rows[0][0]);
        int disease = Convert.ToInt32(Model.Disease.Rows[0][1]);
        int cardiovascular= Convert.ToInt32(Model.Disease.Rows[0][3]);
        int breathing= Convert.ToInt32(Model.Disease.Rows[0][4]);
        int URM= Convert.ToInt32(Model.Disease.Rows[0][5]);
        int SportsOthers= Convert.ToInt32(Model.Disease.Rows[0][6]);
    }

    <div class="form-group">
        <label>疾病史:</label>
        @if (disease == 0)
        {
            <div>
                <label><input type="radio" id="disease" value="0" checked="checked" />无</label>
                <label><input type="radio" id="disease" value="1"> 有</label>
            </div>
            
        }
        else if(disease==1)
        {
            <div>
                <label><input type="radio" id="disease" value="0"  />无</label>
                <label><input type="radio" id="disease" value="1" checked="checked"> 有</label>
            </div>
            
        }
    </div>

    <div class="form-group">
        <label>病种:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Disease.Rows[0][0], new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Identinum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Identinum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Identinum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Birth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Birth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pnickname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pnickname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Pnickname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Kind, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Kind, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Kind, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Isnew, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Isnew, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Isnew, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dt, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.3.1.js"></script>
